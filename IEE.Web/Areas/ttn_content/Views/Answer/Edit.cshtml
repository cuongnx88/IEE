@model IEE.Infrastructure.DbContext.SATAnswer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/ttn_content/Views/Shared/_ttn_content.cshtml";

    var selectedID = "";
    if (ViewBag.SelectedQuestID != 0)
    {
        selectedID = ViewBag.SelectedQuestID.ToString();
    }
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
   
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>SATAnswer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.ID)
    @Html.Hidden("_questionID", selectedID, new { id = "_questionID" })
    <div class="form-group" id="markDiv">
        @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            A @Html.RadioButtonFor(model => model.Mark, "A", new { })
            B @Html.RadioButtonFor(model => model.Mark, "B", new { })
            C @Html.RadioButtonFor(model => model.Mark, "C", new { })
            D @Html.RadioButtonFor(model => model.Mark, "D", new { })
            @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AnswerContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AnswerContent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AnswerContent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Explanation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Explanation, htmlAttributes: new { @class = "form-control", width = "90%", row = "5", @style = "resize:none;" })
            @Html.ValidationMessageFor(model => model.Explanation, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsRightAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsRightAnswer)
                @Html.ValidationMessageFor(model => model.IsRightAnswer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.QuestionID, (SelectList)ViewBag.QuestionID, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QuestionID, "", new { @class = "text-danger" })
            @Html.ValidationMessage("MaxAnswerError", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AnswerType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AnswerType", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AnswerType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
        $(document).ready(function () {
            if ($('#_questionID').val() != "") {
                $('#QuestionID').val($('#_questionID').val());
        }
            $("#AnswerType").trigger('change');
    });
 

    $("#AnswerType").change(function () {
        if ($("#AnswerType").val() == "1") {
            $('#markDiv').hide();
        }
        else {
            $('#markDiv').show();

        }
    });
</script>